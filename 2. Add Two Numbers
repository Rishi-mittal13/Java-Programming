//problem-2(leetcode).
//T.C->O(node.length)=S.C

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
       int c = 0;
       ListNode temp = new ListNode(0);
       ListNode head = temp ;
       while(l1!=null && l2!=null){
           int n = l1.val+l2.val+c;
           if(n>=10){
               n = n-10;
               c = 1;
           }
           else c = 0;
           ListNode v =  new ListNode(n);
           temp.next = v;
           l1 = l1.next ; 
           l2 =  l2.next;
           temp = temp.next;
       }
       while(l1!=null){
           int n = l1.val+c;
           if(n>=10){
               n = n-10;
               c = 1;
           }
           else c = 0;
           ListNode v = new ListNode(n);
           temp.next =  v;
           l1 = l1.next;
           temp = temp.next;
       }
       while(l2!=null){
           int n = l2.val+c;
           if(n>=10){
               n = n-10;
               c = 1;
           }
           else c = 0;
           ListNode v = new ListNode(n);
           temp.next =  v;
           l2 = l2.next;
           temp = temp.next;
       }
       if(c==1) {
           ListNode v = new ListNode(1);
           temp.next =  v;
       }
       return head.next;
    }
}
