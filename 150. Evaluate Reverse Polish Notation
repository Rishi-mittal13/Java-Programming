//problem-150 (LEETCODE).



//Approach=> by array , TIME-COMPLEXITY - O(n).
class Solution {
    public int evalRPN(String[] tokens) {
        int n = tokens.length , ind = 0;
        int[] arr = new int[n];
        for(int i = 0 ;i<n ; i++){
        if(tokens[i].equals("+")){ arr[ind-2] = arr[ind-2]+arr[ind-1];ind--;}
        else if(tokens[i].equals("*")){ arr[ind-2] = arr[ind-2]*arr[ind-1];ind--;}
        else if(tokens[i].equals("/")){ arr[ind-2] = arr[ind-2]/arr[ind-1];ind--;}
        else if(tokens[i].equals("-")){ arr[ind-2] = arr[ind-2]-arr[ind-1];ind--;}
        else arr[ind++] = Integer.parseInt(tokens[i]); 
        }
        return arr[0];
    }
}
