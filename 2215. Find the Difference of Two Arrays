//problem - 2215 (leetcode).
//T.C => O(n).


class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        int[] a1 = new int[1001];
        int[] a2 = new int[1001];
        for(int i : nums2){
            if(i>=0) a1[i]++;
            else a2[-i]++;
        }
        List<Integer> ls1 = new  ArrayList<>();
        List<Integer> ls2 =  new ArrayList<>();
        List<List<Integer>> ls =  new ArrayList<>();
        for(int i : nums1) {
            if(i>=0 && a1[i]==0) {
                ls1.add(i);
                a1[i]++;
            }
            else if(i<0 && a2[-i]==0){
                 ls1.add(i);
                 a2[-i]++;
            }
        }
        a1 = new int[1001];a2=new int[1001];
        for(int i : nums1){
            if(i>=0) a1[i]++;
            else a2[-i]++;
        }
        for(int i : nums2){
            if(i>=0 && a1[i]==0){
                 ls2.add(i);
                 a1[i]++;
            }
            else if(i<0 && a2[-i]==0){
                a2[-i]++;
                ls2.add(i);}
        }
        ls.add(ls1);ls.add(ls2);
        return ls;
    }
}
