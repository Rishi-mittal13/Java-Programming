//problem -  93 (LEETCODE).
//RECURSIVE APPROACH .




class Solution {
    public List<String> restoreIpAddresses(String s) {
        List<String> lst = new ArrayList<>();
        helper(s,0,0,"",lst);
        return lst;
    }
    public static void helper(String s , int i , int par , String ans , List<String > lst){
        if((par==4) || (i==s.length())){
            if((par==4) && (i==s.length())){
            lst.add(ans.substring(0,ans.length()-1));}
            return;
        }
        helper(s,i+1,par+1,ans+s.charAt(i)+".",lst);
        if((i+2<=s.length()) && (isvalid(s.substring(i,i+2)))){
        helper(s,i+2,par+1,ans+s.substring(i,i+2)+".",lst);}
        if((i+3<=s.length()) && (isvalid(s.substring(i,i+3)))){
        helper(s,i+3,par+1,ans+s.substring(i,i+3)+".",lst);}
    }
    public static boolean isvalid(String str){
        if(str.charAt(0) == '0'){
            return false;
        }
        int n = Integer.parseInt(str);
        return n<=255;
    }
}
