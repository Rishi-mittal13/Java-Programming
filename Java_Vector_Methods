// vector is implementation of list interface in java collection framework.
// we study about some important method in vector.

//import java.util.Scanner;

import java.util.Vector;
public class Vector_methods {
    public static void main(String[] args){
    Vector<Integer> vect = new Vector<>();

    // 1).add(element) - adds an element to vectors
    vect.add(34);
    vect.add(35);
    vect.add(36);
    //System.out.println(vect);

    // 2). add(index, element) - adds an element to the specified position
    vect.add(2,45);
    //System.out.println(vect);

    // 3). addAll(vector) - adds all elements of a vector to another vector.

    // 4). remove(index) - removes an element from specified position
    //vect.remove(3);
    // System.out.println(vect);

    // 5). removeAll(c) - removes all the elements where c is the collection.

    // 6). clear() - removes all elements. It is more efficient than removeAll()
    // vect.clear();
    // System.out.println(vect);

    // 7). set()	changes an element of the vector
    vect.set(0,12);
    //System.out.println(vect);

    // 8). size()	returns the size of the vector
    // System.out.println(vect.size());

    // 9). toArray()	converts the vector into an array
    // Object[] arr;
    // arr = vect.toArray();
    // for(Object i : arr){
    //     System.out.println(i);
    // }

    // 10). toString()	converts the vector into a String
    // String s;
    // s = vect.toString();
    // System.out.println(s.charAt(0));

    // 11). contains()	searches the vector for specified element and returns a boolean result
    // boolean a = vect.contains(35);
    // System.out.println(a);

    


    }
}
