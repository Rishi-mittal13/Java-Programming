//problem -  33(leetcode).


//Approach(brute-force):- linear -traversal , T.C => O(n).
class Solution {
    public int search(int[] nums, int target) {
        for(int i = 0 ; i<nums.length ; i++) if(target==nums[i]) return i;
        return -1;
    }
}



//Approach(binary-search):- Binary traversal , T.C => O(log(n)).
class Solution {
    public int search(int[] nums, int target) {
        int s = 0 , e = nums.length -1 ; 
        while(s<=e){
            int mid = (s+e)/2;
            if(nums[mid]==target) return mid;
            else if(nums[s]<=nums[mid]){
                if(target<nums[mid] && target>=nums[s]) e =  mid -1;
                else s = mid+1;
            }
            else{
                if(target>nums[mid] && target<=nums[e]) s = mid+1;
                else e = mid-1;
            }
        }
        return -1;
    }
}
