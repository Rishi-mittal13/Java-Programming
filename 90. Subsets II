//problem - 90(leetcode).

//Approachh ->  BackTracking .


class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> ans =  new ArrayList<>();
        List<Integer> lst =  new ArrayList<>();
        Arrays.sort(nums);
        solve(nums , 0 ,  lst , ans);
        return ans;
    }
    public static void solve(int[] nums , int ind , List<Integer> lst , List<List<Integer>> ans){
        ans.add(new ArrayList<>(lst));
        for(int i = ind ; i<nums.length ; i++){
            if(i>ind && nums[i]==nums[i-1]) continue;
            lst.add(nums[i]);
            solve(nums ,  i+1 , lst , ans);
            lst.remove(lst.size()-1);
        }
    }
}
