//problem -  36 (leetcode).
//T.C ->  O(n).


class Solution {
    static boolean ans = false ;
    public boolean isValidSudoku(char[][] board) {
       for(int i  = 0 ; i<9 ; i++){
           for(int j = 0 ; j<9  ;j++){
               if(board[i][j]!='.'){
                   if(!isPossible(board , i , j , board[i][j])) return false ;
               }
           }
       }
       return true ;
    }
    public static boolean isPossible(char[][] board , int r  ,int c , char val){
        for(int i = 0 ; i<9  ;i++){
            if(board[i][c]==val && i!=r) return false;
            if(board[r][i]==val && i!=c) return false;
        }
        int rs =  3*(r/3) , re = 3*(r/3 + 1);
        int cs =  3*(c/3) ,  ce =  3*(c/3  + 1);
        for(int i =  rs ; i<re ; i++){
            for(int j =  cs ;  j<ce ; j++){
                if(board[i][j]==val && (i!=r && j!=c)) return false;
            }
        }
        return true;
    }
}
