//first we declare a boolean variable for every respective condition
//for strong password according to the question .
//than we estimate the conditions.

//Time complexity:O(password.length()).




class Solution {
    public boolean strongPasswordCheckerII(String password) {
        boolean a = false, b= false, c= false, d= false , e = false , f = true;
        int n = password.length();
        if(n>=8) a = true;
        for(int i = 0 ;i<n ; i++){
            if(i<n-1){
                if(password.charAt(i) == password.charAt(i+1)) {f = false;}
            }
            int asc = (int)password.charAt(i);
            if((asc>=97) && (asc<=122)) b = true;
            if((asc>=65) && (asc<=90)) c = true;
            if((asc>=48) && (asc<=57)) d = true;
            if((asc>=35 && asc<=38) || (asc>=40 && asc<=43) || (asc==45) ||         (asc==94) || (asc==64) || (asc==33)) e = true;
        }
        if(a&&b&&c&&d&&e&&f) return true;
        return false;
    }
}
