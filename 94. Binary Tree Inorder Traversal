/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
 //By stack Approach .
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> lst =  new ArrayList<>();
        Stack<Integer> st = new Stack<>();
        st.push(root);
        while(!st.isEmpty()){
            TreeNode curr =  st.peek();
            lst.add();
            if(curr.left!=null) st.push(curr.left);
            else if (curr.right!=null) st.push(curr.right);
            else lst.add(st.pop().val);
        }
    }
}
