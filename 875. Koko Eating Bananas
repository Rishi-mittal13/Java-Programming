//problem-875 (leetcode).

//binary search approach same as boolk Aloaction question .


class Solution {
    public static boolean isPossible(int[] piles ,  int mid ,  int h){
        int c = 0 ;
        for(int i : piles) {
            if(i%mid==0) c+=(i/mid);
            else c+= ((i/mid)+1);
        }
        return c<=h;
    }
    public int minEatingSpeed(int[] piles, int h) {
        int low =  1 , high =  0 , n = piles.length;
        for(int i  = 0  ;i<n ; i++) if(piles[i]>high) high = piles[i];
        int mid = 0 ;
        while(low<high){
            mid = low+(high-low)/2;
            if(isPossible(piles , mid , h)){
                high = mid;
            }
            else{
                low = mid+1;
            }
        }  
        return low;
    }
}
