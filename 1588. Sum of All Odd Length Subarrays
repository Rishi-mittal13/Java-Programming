//PROBLEM-1588(LEETCODE).
//TIME - COMPLEXITY ( N^3).
//BRUTE - FORCE APPROACH.


class Solution {
    public int sumOddLengthSubarrays(int[] arr) {
        int win=1,ans=0;
        while(win<=arr.length){
            for(int i=0;i<=arr.length-win;i++){
                for(int j=i;j<i+win;j++) ans+=arr[j];
            }
            win+=2;
        }
        return ans;
    }
}



class Solution {
    public int sumOddLengthSubarrays(int[] arr) {
        int n = arr.length , ans = 0 ;
        if(n%2==0) n=n/2;
        else n = (n/2) +1;
        for(int i = 0 ;i<n ; i++){
            for(int j = 0 ; j<(arr.length - 2*i) ; j++){
                for(int k = j ; k<(j+(2*i+1)) ; k++){
                    ans+=arr[k];
                }
            }
        }
    return ans;
    }
}
