//problem - 238(LEETCODE)
//Time - Complexity ==> O(n) , 


class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] left =  new int[n];
        int[] right = new int[n];
        int c  = 1;
        left[0] = 1;
        right[n-1] = 1;
        for(int i = 1 ; i<n ; i++){
            c= c*nums[i-1];
            left[i] = c;
        }
        c = 1;
        for(int i = n-1 ; i>0 ; i--){
            c = c*nums[i];
            right[i-1] = c;
        }
        for(int i = 0 ; i<n ; i++){
            left[i] = left[i]*right[i];
        }
        return left;
    }
}
