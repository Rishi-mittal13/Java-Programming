//problem-19(Leetcode).


//Approach->Two Pointer (best Approach).
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode h1 =  head;
        ListNode h2 =  head ;
        for(int i = 0 ; i<n ; i++) h1 = h1.next;
        if(h1==null) return head.next;
        while(h1!=null && h1.next!=null){
            h1 =  h1.next ;
            h2 = h2.next ;
        }
        h2.next =  h2.next.next;
        return head;
    }
}
