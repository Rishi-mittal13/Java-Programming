//problem -  1493(leetcode).


//T.C -> O(n^2).


class Solution {
    public int longestSubarray(int[] nums) {
        int n =  nums.length , ind  = 0 , max = 0 , i = 0 , count = 0  ;  
        boolean b  =  false , c =  false;; 
        while(i<n){
            if(nums[i]==0 && b==false){
                b =  true ;
                ind = i ;
                i++;
            }
            else if(b && nums[i]==0){
                b =  false;
                i = ind+1;
                count = 0 ;
            }
            else{
                count++;
                i++;
            }
            if(count>=max) {
                max = count ;
                if(b) c= true ;
                else c= false;
            }
            if(i==n) break;
        }
        if(max==0) return 0;
        if(c) return max;
        return max-1;
    }
}
