//problem-46(LEETCODE).
//


class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> arr = new ArrayList<>();
        List<Integer> ans = new ArrayList<>();
        boolean[] vs = new boolean[nums.length];
        perm(nums,arr,ans,vs);
        return arr;
    }
    public static void perm(int[] nums, List<List<Integer>> arr ,List<Integer> ans ,
    boolean[] vs){
        if(ans.size()==nums.length){
            arr.add(new ArrayList<>(ans));
            return ;
        }
        for(int i = 0 ;i<nums.length ; i++){
            if(vs[i]==false){
                ans.add(nums[i]);
                vs[i] = true;
                perm(nums,arr,ans,vs);
                ans.remove(ans.size()-1);
                vs[i] = false;
            }
        }
    }
}
