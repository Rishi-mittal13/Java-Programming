//problem -  2150(LEETCODE).
//TIME-COMPLEXITY - O(N).
//SPACE - COMPLEXITY --> O(N) , N = 1000000.



class Solution {
    public List<Integer> findLonely(int[] nums) {
        List<Integer> lst = new ArrayList<>();
        int[] ar =  new int[1000005];
        for(int i : nums) ar[i]++;
        for(int i = 0 ; i<nums.length ; i++){
            int n = nums[i];
            if((n==0) && (ar[n]==1) && (ar[n+1]==0)) lst.add(n);
            if((n!=0) && (ar[n-1]==0) && (ar[n+1]==0) && (ar[n]==1)) lst.add(n);
        }
        return lst;
    }
}
