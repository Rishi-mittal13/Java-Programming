//problem-155(leetcode).
//all function have time - complexity of O(1).


class MinStack {
    int[] arr ;
    int [] min;
    int tos ;
    int tosmin ;
    public MinStack() {
        arr =  new int[10000];
        min = new int[10000];
        tos = -1;
        tosmin = -1;
    }
    public void push(int val) {
        tos++;
        tosmin++;
        arr[tos] = val ;
        if(tosmin==0) min[tosmin] = val;
        else{
        if(min[tosmin-1]<val) min[tosmin ] =  min[tosmin-1];
        else min[tosmin] = val;
        }
    }
    public void pop() {
        tosmin--;
        tos--;
    }
    public int top() {
        return arr[tos];
    }    
    public int getMin() {
        return min[tosmin];
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
