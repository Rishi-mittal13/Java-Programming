//problem - 61 (leetcode).
//T.C => O(n)


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        int s = size(head) ;
        if(s<=1) return head;
        k = k%s;
        if(k==0) return head;
        ListNode temp = head ;
        ListNode join =  head ;
        for(int i = 0  ;i<k ; i++ ) temp =  temp.next ;
        while(temp.next!=null)  {
            join = join.next ;
            temp =  temp.next ;
        }
        ListNode h1 = join.next ;
        join.next =   null;
        temp =  h1;
        while(temp!=null && temp.next !=null) temp =  temp.next ;
        temp.next =  head ;
        return h1;
    }
    public static int size(ListNode head){
        int n = 0 ; 
        while(head!=null){
            head = head.next ;
            n++;
        }
        return n;
    }
}
